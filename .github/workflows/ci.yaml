name: On-prem image CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'components/crawler/**'
      - 'pkg/**'
      - 'go.mod'
      - 'go.sum'
  workflow_dispatch:
    inputs:
      collectortag:
        description: 'tag?'
        required: true
        default: 'latest'

env:
  TEST_TYPE: 'images'
  TERRAFORM_PROVIDERS_FOLDER: '${{ github.workspace }}/providers'
  GITLEAKS_CONFIG_PATH: '${{ github.workspace }}/gitleaks.toml'

jobs:
  tests:
    name: Run Tests
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2
      - name: Configure git for private modules
        run: git config --global url."https://${{ secrets.GLOBAL_PAT }}:x-oauth-basic@github.com".insteadOf "https://github.com"
      - run: ./scripts/download-provider.sh aws linux amd64 hashicorp 4.8.0
      - run: ./scripts/download-provider.sh kubernetes linux amd64 hashicorp 2.11.0
      - run: ./scripts/download-provider.sh akamai linux amd64 akamai 2.0.0
      - run: ./scripts/download-provider.sh datadog linux amd64 datadog 3.11.0
      - run: ./scripts/download-provider.sh github linux amd64 integrations 4.26.1
      - run: ./scripts/download-provider.sh google linux amd64 hashicorp 4.24.0
      - run: ./scripts/download-provider.sh okta linux amd64 okta 3.11.0
      - run: ./scripts/download-provider.sh newrelic linux amd64 newrelic 2.47.1
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.3'
      - run: go test ./pkg/...
      - run: go test ./lambdas/...
      - run: go test ./components/crawler/...
  dockerhub-build:
    name: Build and push dockerhub
    needs: tests
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get current time
      uses: gerred/actions/current-time@master
      id: current-time

    - name: Build and push image to prod
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: |
          infralightio/self-hosted-redactor:${{ github.event.inputs.collectortag }}
          infralightio/self-hosted-redactor:latest
        labels: |
          org.opencontainers.image.created=${{ steps.current-time.outputs.time }}
          org.opencontainers.image.authors=Infralight
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.version=${{ github.event.inputs.collectortag }}
